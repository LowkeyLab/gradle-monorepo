[versions]
mapstruct = "1.5.5.Final"
kotest = "5.9.0"
kotlin = "2.0.20"
springBoot = "3.3.0"

[plugins]
adarshr-testLogger = { id = "com.adarshr.test-logger", version = "4.0.0" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version = "0.8.0" }
sonarqube = { id = "org.sonarqube", version = "5.0.0.4638" }
diffplug-spotless = { id = "com.diffplug.spotless", version = "7.0.0.BETA2" }
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }

[libraries]
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version = "1.3.0" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJunit5 = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
liquibase-core = { module = "org.liquibase:liquibase-core" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
ninjaSquad-springmockk = { module = "com.ninja-squad:springmockk", version = "4.0.2" }
postgresql = { module = "org.postgresql:postgresql" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-dockerCompose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-starterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starterTest = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
springdoc-openApiStarterWebMvcUi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version = "2.5.0" }
testcontainers-junitJupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
