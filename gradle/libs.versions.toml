[versions]
adarshrTestLogger = "4.0.0"
kotest = "5.9.1"
kotlin = "2.0.20"
mapstruct = "1.6.0"
spotless = "7.0.0.BETA2"
springBoot = "3.3.3"

[plugins]
adarshr-testLogger = { id = "com.adarshr.test-logger", version.ref = "adarshrTestLogger" }
benManes-versions = "com.github.ben-manes.versions:0.51.0"
diffplug-spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
gradle-pluginPublish = "com.gradle.plugin-publish:1.2.2"
gradleup-shadow = "com.gradleup.shadow:8.3.0"
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinx-kover = "org.jetbrains.kotlinx.kover:0.8.3"
littlerobots-versionCatalogUpdate = "nl.littlerobots.version-catalog-update:0.8.4"
sonarqube = "org.sonarqube:5.1.0.4882"
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }

[libraries]
adarshr-testLogger-plugin = { module = "com.adarshr:gradle-test-logger-plugin", version.ref = "adarshrTestLogger" }
diffplug-spotless-plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotest-extensions-spring = "io.kotest.extensions:kotest-extensions-spring:1.3.0"
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJunit5 = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
liquibase-core = { module = "org.liquibase:liquibase-core" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
ninjaSquad-springmockk = "com.ninja-squad:springmockk:4.0.2"
postgresql = { module = "org.postgresql:postgresql" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-dockerCompose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-starterActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starterTest = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
springdoc-openApiStarterWebMvcUi = "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"
testcontainers-junitJupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
